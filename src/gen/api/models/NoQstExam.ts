/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NoQstExamGroupsInner } from './NoQstExamGroupsInner';
import {
    NoQstExamGroupsInnerFromJSON,
    NoQstExamGroupsInnerFromJSONTyped,
    NoQstExamGroupsInnerToJSON,
    NoQstExamGroupsInnerToJSONTyped,
} from './NoQstExamGroupsInner';

/**
 * 
 * @export
 * @interface NoQstExam
 */
export interface NoQstExam {
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    address?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    answerPad?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    answerSheet?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    answerSheetId?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    answeringUrge?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    correctOnline?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    correctOnlineState?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    correctWithSelf?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof NoQstExam
     */
    creationTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    displayAnswer?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    enableScore?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof NoQstExam
     */
    endTime?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    examId?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    examName?: string;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    examState?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    examTips?: string | null;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    gradeId?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    gradeName?: string;
    /**
     * 
     * @type {Array<NoQstExamGroupsInner>}
     * @memberof NoQstExam
     */
    groups?: Array<NoQstExamGroupsInner>;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    isExempted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    isRead?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    isRepresentative?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    myScore?: number;
    /**
     * 
     * @type {boolean}
     * @memberof NoQstExam
     */
    noQstStem?: boolean;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    qstCount?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    revisingUrge?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    score?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    serialNum?: string | null;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    specificTrainingType?: number;
    /**
     * 
     * @type {Date}
     * @memberof NoQstExam
     */
    startTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    state?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    studentUserId?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    teacherUserId?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    testDescription?: string;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    testPagerId?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    testPagerName?: string;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    testTips?: string;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    topicId?: number;
    /**
     * 
     * @type {string}
     * @memberof NoQstExam
     */
    topicName?: string;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    whenShowAnswer?: number;
    /**
     * 
     * @type {number}
     * @memberof NoQstExam
     */
    whenShowMicroLesson?: number;
}

/**
 * Check if a given object implements the NoQstExam interface.
 */
export function instanceOfNoQstExam(value: object): value is NoQstExam {
    return true;
}

export function NoQstExamFromJSON(json: any): NoQstExam {
    return NoQstExamFromJSONTyped(json, false);
}

export function NoQstExamFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoQstExam {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'] == null ? undefined : json['address'],
        'answerPad': json['answerPad'] == null ? undefined : json['answerPad'],
        'answerSheet': json['answerSheet'] == null ? undefined : json['answerSheet'],
        'answerSheetId': json['answerSheetId'] == null ? undefined : json['answerSheetId'],
        'answeringUrge': json['answeringUrge'] == null ? undefined : json['answeringUrge'],
        'correctOnline': json['correctOnline'] == null ? undefined : json['correctOnline'],
        'correctOnlineState': json['correctOnlineState'] == null ? undefined : json['correctOnlineState'],
        'correctWithSelf': json['correctWithSelf'] == null ? undefined : json['correctWithSelf'],
        'creationTime': json['creationTime'] == null ? undefined : (new Date(json['creationTime'])),
        'displayAnswer': json['displayAnswer'] == null ? undefined : json['displayAnswer'],
        'enableScore': json['enableScore'] == null ? undefined : json['enableScore'],
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'examId': json['examId'] == null ? undefined : json['examId'],
        'examName': json['examName'] == null ? undefined : json['examName'],
        'examState': json['examState'] == null ? undefined : json['examState'],
        'examTips': json['examTips'] == null ? undefined : json['examTips'],
        'gradeId': json['gradeId'] == null ? undefined : json['gradeId'],
        'gradeName': json['gradeName'] == null ? undefined : json['gradeName'],
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(NoQstExamGroupsInnerFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'isExempted': json['isExempted'] == null ? undefined : json['isExempted'],
        'isRead': json['isRead'] == null ? undefined : json['isRead'],
        'isRepresentative': json['isRepresentative'] == null ? undefined : json['isRepresentative'],
        'myScore': json['myScore'] == null ? undefined : json['myScore'],
        'noQstStem': json['noQstStem'] == null ? undefined : json['noQstStem'],
        'qstCount': json['qstCount'] == null ? undefined : json['qstCount'],
        'revisingUrge': json['revisingUrge'] == null ? undefined : json['revisingUrge'],
        'score': json['score'] == null ? undefined : json['score'],
        'serialNum': json['serialNum'] == null ? undefined : json['serialNum'],
        'size': json['size'] == null ? undefined : json['size'],
        'specificTrainingType': json['specificTrainingType'] == null ? undefined : json['specificTrainingType'],
        'startTime': json['startTime'] == null ? undefined : (new Date(json['startTime'])),
        'state': json['state'] == null ? undefined : json['state'],
        'studentUserId': json['studentUserId'] == null ? undefined : json['studentUserId'],
        'teacherUserId': json['teacherUserId'] == null ? undefined : json['teacherUserId'],
        'testDescription': json['testDescription'] == null ? undefined : json['testDescription'],
        'testPagerId': json['testPagerId'] == null ? undefined : json['testPagerId'],
        'testPagerName': json['testPagerName'] == null ? undefined : json['testPagerName'],
        'testTips': json['testTips'] == null ? undefined : json['testTips'],
        'topicId': json['topicId'] == null ? undefined : json['topicId'],
        'topicName': json['topicName'] == null ? undefined : json['topicName'],
        'whenShowAnswer': json['whenShowAnswer'] == null ? undefined : json['whenShowAnswer'],
        'whenShowMicroLesson': json['whenShowMicroLesson'] == null ? undefined : json['whenShowMicroLesson'],
    };
}

export function NoQstExamToJSON(json: any): NoQstExam {
    return NoQstExamToJSONTyped(json, false);
}

export function NoQstExamToJSONTyped(value?: NoQstExam | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'answerPad': value['answerPad'],
        'answerSheet': value['answerSheet'],
        'answerSheetId': value['answerSheetId'],
        'answeringUrge': value['answeringUrge'],
        'correctOnline': value['correctOnline'],
        'correctOnlineState': value['correctOnlineState'],
        'correctWithSelf': value['correctWithSelf'],
        'creationTime': value['creationTime'] == null ? undefined : ((value['creationTime']).toISOString()),
        'displayAnswer': value['displayAnswer'],
        'enableScore': value['enableScore'],
        'endTime': value['endTime'] == null ? undefined : ((value['endTime'] as any).toISOString()),
        'examId': value['examId'],
        'examName': value['examName'],
        'examState': value['examState'],
        'examTips': value['examTips'],
        'gradeId': value['gradeId'],
        'gradeName': value['gradeName'],
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(NoQstExamGroupsInnerToJSON)),
        'id': value['id'],
        'isExempted': value['isExempted'],
        'isRead': value['isRead'],
        'isRepresentative': value['isRepresentative'],
        'myScore': value['myScore'],
        'noQstStem': value['noQstStem'],
        'qstCount': value['qstCount'],
        'revisingUrge': value['revisingUrge'],
        'score': value['score'],
        'serialNum': value['serialNum'],
        'size': value['size'],
        'specificTrainingType': value['specificTrainingType'],
        'startTime': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'state': value['state'],
        'studentUserId': value['studentUserId'],
        'teacherUserId': value['teacherUserId'],
        'testDescription': value['testDescription'],
        'testPagerId': value['testPagerId'],
        'testPagerName': value['testPagerName'],
        'testTips': value['testTips'],
        'topicId': value['topicId'],
        'topicName': value['topicName'],
        'whenShowAnswer': value['whenShowAnswer'],
        'whenShowMicroLesson': value['whenShowMicroLesson'],
    };
}

