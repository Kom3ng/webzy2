/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QstFlow } from './QstFlow';
import {
    QstFlowFromJSON,
    QstFlowFromJSONTyped,
    QstFlowToJSON,
    QstFlowToJSONTyped,
} from './QstFlow';
import type { QuestionViewAnswerListInner } from './QuestionViewAnswerListInner';
import {
    QuestionViewAnswerListInnerFromJSON,
    QuestionViewAnswerListInnerFromJSONTyped,
    QuestionViewAnswerListInnerToJSON,
    QuestionViewAnswerListInnerToJSONTyped,
} from './QuestionViewAnswerListInner';

/**
 * 
 * @export
 * @interface QuestionView
 */
export interface QuestionView {
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    attachments?: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    qstAnswers?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    analysis?: string | null;
    /**
     * 
     * @type {Array<object>}
     * @memberof QuestionView
     */
    microClassToQuestionList?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof QuestionView
     */
    microClassToStudentList?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    examDraft?: string;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    revisingDraft?: string | null;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    revisingResult?: number;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionView
     */
    examAnswered?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionView
     */
    revisingAnswerd?: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof QuestionView
     */
    lastRoundRevisingRecords?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    typicalRightAnswers?: string | null;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    typicalErrorAnswers?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionView
     */
    isInMistakeBook?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionView
     */
    askForHelp?: boolean;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    number?: number;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    path?: string;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    itemType?: number;
    /**
     * 
     * @type {Array<QstFlow>}
     * @memberof QuestionView
     */
    qstFlows?: Array<QstFlow>;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    qstFlowsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    totalScore?: number;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    totalAnswerScore?: number;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    score?: number;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    originScore?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof QuestionView
     */
    answerWithQuestion?: boolean;
    /**
     * 
     * @type {Array<QuestionViewAnswerListInner>}
     * @memberof QuestionView
     */
    answerList?: Array<QuestionViewAnswerListInner>;
    /**
     * 
     * @type {string}
     * @memberof QuestionView
     */
    microClassList?: string | null;
    /**
     * 
     * @type {number}
     * @memberof QuestionView
     */
    id?: number;
}

/**
 * Check if a given object implements the QuestionView interface.
 */
export function instanceOfQuestionView(value: object): value is QuestionView {
    return true;
}

export function QuestionViewFromJSON(json: any): QuestionView {
    return QuestionViewFromJSONTyped(json, false);
}

export function QuestionViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuestionView {
    if (json == null) {
        return json;
    }
    return {
        
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'qstAnswers': json['qstAnswers'] == null ? undefined : json['qstAnswers'],
        'analysis': json['analysis'] == null ? undefined : json['analysis'],
        'microClassToQuestionList': json['microClassToQuestionList'] == null ? undefined : json['microClassToQuestionList'],
        'microClassToStudentList': json['microClassToStudentList'] == null ? undefined : json['microClassToStudentList'],
        'examDraft': json['examDraft'] == null ? undefined : json['examDraft'],
        'revisingDraft': json['revisingDraft'] == null ? undefined : json['revisingDraft'],
        'revisingResult': json['revisingResult'] == null ? undefined : json['revisingResult'],
        'examAnswered': json['examAnswered'] == null ? undefined : json['examAnswered'],
        'revisingAnswerd': json['revisingAnswerd'] == null ? undefined : json['revisingAnswerd'],
        'lastRoundRevisingRecords': json['lastRoundRevisingRecords'] == null ? undefined : json['lastRoundRevisingRecords'],
        'typicalRightAnswers': json['typicalRightAnswers'] == null ? undefined : json['typicalRightAnswers'],
        'typicalErrorAnswers': json['typicalErrorAnswers'] == null ? undefined : json['typicalErrorAnswers'],
        'isInMistakeBook': json['isInMistakeBook'] == null ? undefined : json['isInMistakeBook'],
        'askForHelp': json['askForHelp'] == null ? undefined : json['askForHelp'],
        'number': json['number'] == null ? undefined : json['number'],
        'path': json['path'] == null ? undefined : json['path'],
        'itemType': json['itemType'] == null ? undefined : json['itemType'],
        'qstFlows': json['qstFlows'] == null ? undefined : ((json['qstFlows'] as Array<any>).map(QstFlowFromJSON)),
        'qstFlowsCount': json['qstFlowsCount'] == null ? undefined : json['qstFlowsCount'],
        'totalScore': json['totalScore'] == null ? undefined : json['totalScore'],
        'totalAnswerScore': json['totalAnswerScore'] == null ? undefined : json['totalAnswerScore'],
        'score': json['score'] == null ? undefined : json['score'],
        'originScore': json['originScore'] == null ? undefined : json['originScore'],
        'answerWithQuestion': json['answerWithQuestion'] == null ? undefined : json['answerWithQuestion'],
        'answerList': json['answerList'] == null ? undefined : ((json['answerList'] as Array<any>).map(QuestionViewAnswerListInnerFromJSON)),
        'microClassList': json['microClassList'] == null ? undefined : json['microClassList'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function QuestionViewToJSON(json: any): QuestionView {
    return QuestionViewToJSONTyped(json, false);
}

export function QuestionViewToJSONTyped(value?: QuestionView | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'attachments': value['attachments'],
        'qstAnswers': value['qstAnswers'],
        'analysis': value['analysis'],
        'microClassToQuestionList': value['microClassToQuestionList'],
        'microClassToStudentList': value['microClassToStudentList'],
        'examDraft': value['examDraft'],
        'revisingDraft': value['revisingDraft'],
        'revisingResult': value['revisingResult'],
        'examAnswered': value['examAnswered'],
        'revisingAnswerd': value['revisingAnswerd'],
        'lastRoundRevisingRecords': value['lastRoundRevisingRecords'],
        'typicalRightAnswers': value['typicalRightAnswers'],
        'typicalErrorAnswers': value['typicalErrorAnswers'],
        'isInMistakeBook': value['isInMistakeBook'],
        'askForHelp': value['askForHelp'],
        'number': value['number'],
        'path': value['path'],
        'itemType': value['itemType'],
        'qstFlows': value['qstFlows'] == null ? undefined : ((value['qstFlows'] as Array<any>).map(QstFlowToJSON)),
        'qstFlowsCount': value['qstFlowsCount'],
        'totalScore': value['totalScore'],
        'totalAnswerScore': value['totalAnswerScore'],
        'score': value['score'],
        'originScore': value['originScore'],
        'answerWithQuestion': value['answerWithQuestion'],
        'answerList': value['answerList'] == null ? undefined : ((value['answerList'] as Array<any>).map(QuestionViewAnswerListInnerToJSON)),
        'microClassList': value['microClassList'],
        'id': value['id'],
    };
}

