/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleType } from './RoleType';
import {
    RoleTypeFromJSON,
    RoleTypeFromJSONTyped,
    RoleTypeToJSON,
    RoleTypeToJSONTyped,
} from './RoleType';

/**
 * 
 * @export
 * @interface Login200ResponseResult
 */
export interface Login200ResponseResult {
    /**
     * 
     * @type {string}
     * @memberof Login200ResponseResult
     */
    clientCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Login200ResponseResult
     */
    accessToken?: string;
    /**
     * 
     * @type {string}
     * @memberof Login200ResponseResult
     */
    rongCloudToken?: string;
    /**
     * 
     * @type {number}
     * @memberof Login200ResponseResult
     */
    expireInSeconds?: number;
    /**
     * 
     * @type {number}
     * @memberof Login200ResponseResult
     */
    userId?: number;
    /**
     * 
     * @type {RoleType}
     * @memberof Login200ResponseResult
     */
    roleType?: RoleType;
    /**
     * 
     * @type {string}
     * @memberof Login200ResponseResult
     */
    mobile?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Login200ResponseResult
     */
    needChangePwd?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Login200ResponseResult
     */
    refreshToken?: string;
    /**
     * 
     * @type {number}
     * @memberof Login200ResponseResult
     */
    refreshExpireInSeconds?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Login200ResponseResult
     */
    needSmsVerification?: boolean;
}



/**
 * Check if a given object implements the Login200ResponseResult interface.
 */
export function instanceOfLogin200ResponseResult(value: object): value is Login200ResponseResult {
    return true;
}

export function Login200ResponseResultFromJSON(json: any): Login200ResponseResult {
    return Login200ResponseResultFromJSONTyped(json, false);
}

export function Login200ResponseResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): Login200ResponseResult {
    if (json == null) {
        return json;
    }
    return {
        
        'clientCode': json['clientCode'] == null ? undefined : json['clientCode'],
        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],
        'rongCloudToken': json['rongCloudToken'] == null ? undefined : json['rongCloudToken'],
        'expireInSeconds': json['expireInSeconds'] == null ? undefined : json['expireInSeconds'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'roleType': json['roleType'] == null ? undefined : RoleTypeFromJSON(json['roleType']),
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'needChangePwd': json['needChangePwd'] == null ? undefined : json['needChangePwd'],
        'refreshToken': json['refreshToken'] == null ? undefined : json['refreshToken'],
        'refreshExpireInSeconds': json['refreshExpireInSeconds'] == null ? undefined : json['refreshExpireInSeconds'],
        'needSmsVerification': json['needSmsVerification'] == null ? undefined : json['needSmsVerification'],
    };
}

export function Login200ResponseResultToJSON(json: any): Login200ResponseResult {
    return Login200ResponseResultToJSONTyped(json, false);
}

export function Login200ResponseResultToJSONTyped(value?: Login200ResponseResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clientCode': value['clientCode'],
        'accessToken': value['accessToken'],
        'rongCloudToken': value['rongCloudToken'],
        'expireInSeconds': value['expireInSeconds'],
        'userId': value['userId'],
        'roleType': RoleTypeToJSON(value['roleType']),
        'mobile': value['mobile'],
        'needChangePwd': value['needChangePwd'],
        'refreshToken': value['refreshToken'],
        'refreshExpireInSeconds': value['refreshExpireInSeconds'],
        'needSmsVerification': value['needSmsVerification'],
    };
}

