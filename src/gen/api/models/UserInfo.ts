/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoleType } from './RoleType';
import {
    RoleTypeFromJSON,
    RoleTypeFromJSONTyped,
    RoleTypeToJSON,
    RoleTypeToJSONTyped,
} from './RoleType';

/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    realName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    surname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    mobile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    photo?: string;
    /**
     * 
     * @type {Array<RoleType>}
     * @memberof UserInfo
     */
    roles?: Array<RoleType>;
}

/**
 * Check if a given object implements the UserInfo interface.
 */
export function instanceOfUserInfo(value: object): value is UserInfo {
    return true;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'realName': json['realName'] == null ? undefined : json['realName'],
        'surname': json['surname'] == null ? undefined : json['surname'],
        'name': json['name'] == null ? undefined : json['name'],
        'mobile': json['mobile'] == null ? undefined : json['mobile'],
        'email': json['email'] == null ? undefined : json['email'],
        'photo': json['photo'] == null ? undefined : json['photo'],
        'roles': json['roles'] == null ? undefined : ((json['roles'] as Array<any>).map(RoleTypeFromJSON)),
    };
}

export function UserInfoToJSON(json: any): UserInfo {
    return UserInfoToJSONTyped(json, false);
}

export function UserInfoToJSONTyped(value?: UserInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userName': value['userName'],
        'realName': value['realName'],
        'surname': value['surname'],
        'name': value['name'],
        'mobile': value['mobile'],
        'email': value['email'],
        'photo': value['photo'],
        'roles': value['roles'] == null ? undefined : ((value['roles'] as Array<any>).map(RoleTypeToJSON)),
    };
}

