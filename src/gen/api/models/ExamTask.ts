/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExamTaskGroupsInner } from './ExamTaskGroupsInner';
import {
    ExamTaskGroupsInnerFromJSON,
    ExamTaskGroupsInnerFromJSONTyped,
    ExamTaskGroupsInnerToJSON,
    ExamTaskGroupsInnerToJSONTyped,
} from './ExamTaskGroupsInner';

/**
 * 
 * @export
 * @interface ExamTask
 */
export interface ExamTask {
    /**
     * 
     * @type {string}
     * @memberof ExamTask
     */
    address?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ExamTask
     */
    answerPad?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExamTask
     */
    answerSheet?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    answerSheetId?: number;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    answeringUrge?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ExamTask
     */
    correctOnline?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    correctOnlineState?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ExamTask
     */
    correctWithSelf?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ExamTask
     */
    creationTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    displayAnswer?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ExamTask
     */
    enableScore?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ExamTask
     */
    endTime?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    examId?: number;
    /**
     * 
     * @type {string}
     * @memberof ExamTask
     */
    examName?: string;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    examState?: number;
    /**
     * 
     * @type {string}
     * @memberof ExamTask
     */
    examTips?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExamTask
     */
    gradeId?: number;
    /**
     * 
     * @type {string}
     * @memberof ExamTask
     */
    gradeName?: string;
    /**
     * 
     * @type {Array<ExamTaskGroupsInner>}
     * @memberof ExamTask
     */
    groups?: Array<ExamTaskGroupsInner>;
}

/**
 * Check if a given object implements the ExamTask interface.
 */
export function instanceOfExamTask(value: object): value is ExamTask {
    return true;
}

export function ExamTaskFromJSON(json: any): ExamTask {
    return ExamTaskFromJSONTyped(json, false);
}

export function ExamTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExamTask {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'] == null ? undefined : json['address'],
        'answerPad': json['answerPad'] == null ? undefined : json['answerPad'],
        'answerSheet': json['answerSheet'] == null ? undefined : json['answerSheet'],
        'answerSheetId': json['answerSheetId'] == null ? undefined : json['answerSheetId'],
        'answeringUrge': json['answeringUrge'] == null ? undefined : json['answeringUrge'],
        'correctOnline': json['correctOnline'] == null ? undefined : json['correctOnline'],
        'correctOnlineState': json['correctOnlineState'] == null ? undefined : json['correctOnlineState'],
        'correctWithSelf': json['correctWithSelf'] == null ? undefined : json['correctWithSelf'],
        'creationTime': json['creationTime'] == null ? undefined : (new Date(json['creationTime'])),
        'displayAnswer': json['displayAnswer'] == null ? undefined : json['displayAnswer'],
        'enableScore': json['enableScore'] == null ? undefined : json['enableScore'],
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'examId': json['examId'] == null ? undefined : json['examId'],
        'examName': json['examName'] == null ? undefined : json['examName'],
        'examState': json['examState'] == null ? undefined : json['examState'],
        'examTips': json['examTips'] == null ? undefined : json['examTips'],
        'gradeId': json['gradeId'] == null ? undefined : json['gradeId'],
        'gradeName': json['gradeName'] == null ? undefined : json['gradeName'],
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(ExamTaskGroupsInnerFromJSON)),
    };
}

export function ExamTaskToJSON(json: any): ExamTask {
    return ExamTaskToJSONTyped(json, false);
}

export function ExamTaskToJSONTyped(value?: ExamTask | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'answerPad': value['answerPad'],
        'answerSheet': value['answerSheet'],
        'answerSheetId': value['answerSheetId'],
        'answeringUrge': value['answeringUrge'],
        'correctOnline': value['correctOnline'],
        'correctOnlineState': value['correctOnlineState'],
        'correctWithSelf': value['correctWithSelf'],
        'creationTime': value['creationTime'] == null ? undefined : ((value['creationTime']).toISOString()),
        'displayAnswer': value['displayAnswer'],
        'enableScore': value['enableScore'],
        'endTime': value['endTime'] == null ? undefined : ((value['endTime'] as any).toISOString()),
        'examId': value['examId'],
        'examName': value['examName'],
        'examState': value['examState'],
        'examTips': value['examTips'],
        'gradeId': value['gradeId'],
        'gradeName': value['gradeName'],
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(ExamTaskGroupsInnerToJSON)),
    };
}

