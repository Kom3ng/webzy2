/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnswerInfo
 */
export interface AnswerInfo {
    /**
     * 
     * @type {Array<string>}
     * @memberof AnswerInfo
     */
    examAnswers?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AnswerInfo
     */
    examComments?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AnswerInfo
     */
    examMicroLessonComment?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AnswerInfo
     */
    number?: number;
    /**
     * 
     * @type {number}
     * @memberof AnswerInfo
     */
    result?: number;
    /**
     * 
     * @type {string}
     * @memberof AnswerInfo
     */
    reviseMicroLessonComment?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof AnswerInfo
     */
    revisingAnswers?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AnswerInfo
     */
    revisingComments?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AnswerInfo
     */
    uuid?: string | null;
}

/**
 * Check if a given object implements the AnswerInfo interface.
 */
export function instanceOfAnswerInfo(value: object): value is AnswerInfo {
    return true;
}

export function AnswerInfoFromJSON(json: any): AnswerInfo {
    return AnswerInfoFromJSONTyped(json, false);
}

export function AnswerInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnswerInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'examAnswers': json['examAnswers'] == null ? undefined : json['examAnswers'],
        'examComments': json['examComments'] == null ? undefined : json['examComments'],
        'examMicroLessonComment': json['examMicroLessonComment'] == null ? undefined : json['examMicroLessonComment'],
        'number': json['number'] == null ? undefined : json['number'],
        'result': json['result'] == null ? undefined : json['result'],
        'reviseMicroLessonComment': json['reviseMicroLessonComment'] == null ? undefined : json['reviseMicroLessonComment'],
        'revisingAnswers': json['revisingAnswers'] == null ? undefined : json['revisingAnswers'],
        'revisingComments': json['revisingComments'] == null ? undefined : json['revisingComments'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
    };
}

export function AnswerInfoToJSON(json: any): AnswerInfo {
    return AnswerInfoToJSONTyped(json, false);
}

export function AnswerInfoToJSONTyped(value?: AnswerInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'examAnswers': value['examAnswers'],
        'examComments': value['examComments'],
        'examMicroLessonComment': value['examMicroLessonComment'],
        'number': value['number'],
        'result': value['result'],
        'reviseMicroLessonComment': value['reviseMicroLessonComment'],
        'revisingAnswers': value['revisingAnswers'],
        'revisingComments': value['revisingComments'],
        'uuid': value['uuid'],
    };
}

