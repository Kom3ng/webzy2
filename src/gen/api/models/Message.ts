/* tslint:disable */
/* eslint-disable */
/**
 * 中育API
 * 中育的api
 *
 * The version of the OpenAPI document: 1.0
 * Contact: 3262392248@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * 
     * @type {object}
     * @memberof Message
     */
    applaud?: object;
    /**
     * 
     * @type {Date}
     * @memberof Message
     */
    applaudTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    applauds?: number;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    contact?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Message
     */
    disabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Message
     */
    isPrimary?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    msgFlag?: number;
    /**
     * 
     * @type {object}
     * @memberof Message
     */
    read?: object;
    /**
     * 
     * @type {Date}
     * @memberof Message
     */
    readTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Message
     */
    sendTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    sessionId?: number;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    snapshot?: string;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    userName?: string;
}

/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'applaud': json['applaud'] == null ? undefined : json['applaud'],
        'applaudTime': json['applaudTime'] == null ? undefined : (new Date(json['applaudTime'])),
        'applauds': json['applauds'] == null ? undefined : json['applauds'],
        'contact': json['contact'] == null ? undefined : json['contact'],
        'disabled': json['disabled'] == null ? undefined : json['disabled'],
        'id': json['id'] == null ? undefined : json['id'],
        'isPrimary': json['isPrimary'] == null ? undefined : json['isPrimary'],
        'msgFlag': json['msgFlag'] == null ? undefined : json['msgFlag'],
        'read': json['read'] == null ? undefined : json['read'],
        'readTime': json['readTime'] == null ? undefined : (new Date(json['readTime'])),
        'sendTime': json['sendTime'] == null ? undefined : (new Date(json['sendTime'])),
        'sessionId': json['sessionId'] == null ? undefined : json['sessionId'],
        'snapshot': json['snapshot'] == null ? undefined : json['snapshot'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'userName': json['userName'] == null ? undefined : json['userName'],
    };
}

export function MessageToJSON(json: any): Message {
    return MessageToJSONTyped(json, false);
}

export function MessageToJSONTyped(value?: Message | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'applaud': value['applaud'],
        'applaudTime': value['applaudTime'] == null ? undefined : ((value['applaudTime']).toISOString()),
        'applauds': value['applauds'],
        'contact': value['contact'],
        'disabled': value['disabled'],
        'id': value['id'],
        'isPrimary': value['isPrimary'],
        'msgFlag': value['msgFlag'],
        'read': value['read'],
        'readTime': value['readTime'] == null ? undefined : ((value['readTime']).toISOString()),
        'sendTime': value['sendTime'] == null ? undefined : ((value['sendTime']).toISOString()),
        'sessionId': value['sessionId'],
        'snapshot': value['snapshot'],
        'userId': value['userId'],
        'userName': value['userName'],
    };
}

